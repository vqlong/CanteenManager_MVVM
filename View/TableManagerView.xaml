<Window x:Class="View.TableManagerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:View"
        mc:Ignorable="d"
        Title="{Binding ElementName=txbTitle, Path=Text}" 
        MinHeight="450" 
        MinWidth="650"
        Height="850"
        Width="1550"
        WindowStartupLocation="CenterScreen"
        Style="{StaticResource Window.CustomStyle}"
        Background="{Binding ElementName=cbBackground, Path=SelectedItem.Brush}"
        BorderBrush="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}"
        xmlns:model="clr-namespace:Model;assembly=Model"     
        xmlns:mctrl="clr-namespace:WpfLibrary.UserControls;assembly=WpfLibrary"
        xmlns:mlib="clr-namespace:WpfLibrary;assembly=WpfLibrary"  
        DataContext="{StaticResource TableManagerVM}"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:vm="clr-namespace:ViewModel;assembly=ViewModel"
        x:Name="tablemanager">
    <x:Code>
        <![CDATA[
            public TableManagerView()
            {
                InitializeComponent(); 
            }  

            private void Hyperlink_RequestNavigate(object sender, System.Windows.Navigation.RequestNavigateEventArgs e)
            {
                var processStartInfor = new ProcessStartInfo(e.Uri.ToString())
                {
                    UseShellExecute = true
                };

                Process.Start(processStartInfor);
            }
        ]]>
    </x:Code>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Closing">
            <b:InvokeCommandAction Command="{Binding Source={StaticResource SkinVM}, Path=SaveCurrentSkin}" CommandParameter="{Binding ElementName=cbSkins, Path=SelectedValue}"/>
            <b:InvokeCommandAction Command="{Binding CloseMedia}"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding Source={StaticResource SkinVM}, Path=LoadCurrentSkin}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=TextColorView.CurrentItem.Brush}"/>
            <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <DataTemplate DataType="{x:Type vm:NamedBrush}">
            <StackPanel Orientation="Horizontal">
                <Rectangle Width="20" Height="20" Fill="{Binding Brush}" Margin="0 0 2 0"/>
                <TextBlock Text="{Binding Name}" FontSize="16"/>
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type model:Category}">
            <Border Margin="2">
                <StackPanel Orientation="Horizontal">
                    <Image Source="Images/icon.ico" Width="30"/>
                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="5 0 0 0" />
                </StackPanel>
            </Border>
        </DataTemplate>

        <DataTemplate DataType="{x:Type model:Food}">
            <Border Margin="2">
                <StackPanel Orientation="Horizontal">
                    <Image Source="Images/icon.ico" Width="30"/>
                    <TextBlock Text="{Binding Name}"  VerticalAlignment="Center" Margin="5 0 0 0" />
                </StackPanel>
            </Border>
        </DataTemplate>

        <Style TargetType="ToggleButton">
            <Setter Property="BorderBrush" Value="{Binding ElementName=cbTableBorderColor, Path=SelectedItem.Brush}"/>
            <Setter Property="FontFamily" Value="{Binding ElementName=cbFontFamilies, Path=SelectedItem.Source}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MinHeight" Value="100"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10"
                                    MinWidth="{TemplateBinding MinWidth}"
                                    MinHeight="{TemplateBinding MinHeight}">
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="mctrl:NumericUpDown">
            <Setter Property="Background" Value="{Binding ElementName=cbControlBackground, Path=SelectedItem.Brush}"/>
            <Setter Property="Foreground" Value="{Binding ElementName=cbTextColor, Path=SelectedItem.Brush}"/>
            <Setter Property="BorderBrush" Value="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="mlib:AttachedManager.CornerRadius" Value="4.5"/>
        </Style>
        
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
        <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
        <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
        <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
        <ControlTemplate x:Key="SubmenuItemTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <Grid Margin="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Selected.Background}" BorderBrush="{StaticResource MenuItem.Selected.Border}" BorderThickness="1" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                        <Path x:Name="Glyph" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="10"/>
                    </Border>
                    <ContentPresenter x:Name="menuHeaderContainer" ContentSource="Header" Grid.Column="2" HorizontalAlignment="Stretch" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="menuGestureText" Grid.Column="3" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="MenuItem" >
            <Style.Triggers>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template" Value="{StaticResource SubmenuItemTemplate}"/>
                    <Setter Property="StaysOpenOnClick" Value="True"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <DockPanel>
        <DockPanel.ContextMenu>
            <ContextMenu DataContext="{StaticResource SkinVM}">
                <MenuItem Header="Admin" 
                          Command="{Binding Source={StaticResource TableManagerVM}, Path=OpenWindow}"
                          CommandParameter="{x:Type local:AdminView}">
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static vm:MainViewModel.Instance}, Path=LoginAccount.Type}" Value="Admin">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <MenuItem Header="Thông tin cá nhân" Padding="-2 0 0 0" 
                          InputGestureText="{Binding Source={StaticResource TableManagerVM}, Path=LoginAccount.DisplayName, StringFormat={}[{0}]}" 
                          Command="{Binding Source={StaticResource TableManagerVM}, Path=OpenWindow}"
                          CommandParameter="{x:Type local:AccountProfileView}"/>
                <Separator/>
                <MenuItem Header="Chọn màu" > 
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Chọn Skin</TextBlock>
                                <ComboBox ItemsSource="{Binding SkinsView}" 
                                          DisplayMemberPath="Name"
                                          SelectedValuePath="Name"
                                          IsSynchronizedWithCurrentItem="True" 
                                          FontSize="16"
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Màu chữ</TextBlock>
                                <ComboBox ItemsSource="{Binding TextColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Màu nền</TextBlock>
                                <ComboBox ItemsSource="{Binding BackgroundView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Control</TextBlock>
                                <ComboBox ItemsSource="{Binding ControlBackgroundView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Đường viền</TextBlock>
                                <ComboBox ItemsSource="{Binding BorderColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Hoá đơn</TextBlock>
                                <ComboBox ItemsSource="{Binding BillColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Chọn bàn</TextBlock>
                                <ComboBox ItemsSource="{Binding SelectedTableColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Cạnh bàn</TextBlock>
                                <ComboBox ItemsSource="{Binding TableBorderColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Có người</TextBlock>
                                <ComboBox ItemsSource="{Binding UsingTableColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Tên bàn</TextBlock>
                                <ComboBox ItemsSource="{Binding UsingTableNameColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Trống</TextBlock>
                                <ComboBox ItemsSource="{Binding EmptyTableColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Tên bàn</TextBlock>
                                <ComboBox ItemsSource="{Binding EmptyTableNameColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Chọn Fonts">
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="0 0 5 0">Fonts chữ</TextBlock>
                                <ComboBox ItemsSource="{Binding FontFamiliesView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" >
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type FontFamily}">
                                            <TextBlock Text="{Binding FamilyNames[en-us]}" FontFamily="{Binding}" FontSize="16"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Nghe nhạc" Padding="-2 0 0 0" InputGestureText="{Binding Source={x:Reference Name=txblMediaPosition}, Path=Text}" Command="{Binding Source={StaticResource TableManagerVM}, Path=PlayMedia}">
                    <MenuItem.Icon>
                        <Border Margin="-3 0 -5 0">
                            <Border.Background>
                                <VisualBrush Visual="{x:Reference Name=statusEqualizer}"/>
                            </Border.Background>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Về chương trình"/>
                <MenuItem Header="Đăng xuất" Command="{Binding Close}" CommandParameter="{x:Reference tablemanager}"/>
            </ContextMenu>
        </DockPanel.ContextMenu>
        <Menu DockPanel.Dock="Top" Background="{Binding ElementName=cbControlBackground, Path=SelectedItem.Brush}" DataContext="{StaticResource SkinVM}">
            <MenuItem Command="{Binding Source={StaticResource TableManagerVM}, Path=OpenWindow}"
                      CommandParameter="{x:Type local:AdminView}">
                <MenuItem.Header>
                    <TextBlock><AccessText>_Admin</AccessText></TextBlock>
                </MenuItem.Header>
                <MenuItem.Style>
                    <Style TargetType="MenuItem">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static vm:MainViewModel.Instance}, Path=LoginAccount.Type}" Value="Admin">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <MenuItem >
                <MenuItem.Header>
                    <TextBlock><AccessText>_Tuỳ chọn</AccessText></TextBlock>
                </MenuItem.Header>
                <MenuItem Header="Thông tin cá nhân" Padding="-2 0 0 0" 
                          InputGestureText="{Binding Source={StaticResource TableManagerVM}, Path=LoginAccount.DisplayName, StringFormat={}[{0}]}"  
                          Command="{Binding Source={StaticResource TableManagerVM}, Path=OpenWindow}"
                          CommandParameter="{x:Type local:AccountProfileView}"/>
                <Separator/>
                <MenuItem Header="Chọn màu">
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Chọn Skin</TextBlock>
                                <ComboBox Name="cbSkins" 
                                          ItemsSource="{Binding SkinsView}" 
                                          DisplayMemberPath="Name"
                                          SelectedValuePath="Name"
                                          SelectedItem="{Binding SelectedSkin}"
                                          FontSize="16"
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" >
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="SelectionChanged">
                                            <b:InvokeCommandAction Command="{Binding SelectSkin}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </ComboBox>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Màu chữ</TextBlock>
                                <ComboBox Name="cbTextColor" 
                                          ItemsSource="{Binding TextColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Màu nền</TextBlock>
                                <ComboBox Name="cbBackground"
                                          ItemsSource="{Binding BackgroundView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Control</TextBlock>
                                <ComboBox Name="cbControlBackground" 
                                          ItemsSource="{Binding ControlBackgroundView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Đường viền</TextBlock>
                                <ComboBox Name="cbBorderColor" 
                                          ItemsSource="{Binding BorderColorView}"
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Hoá đơn</TextBlock>
                                <ComboBox Name="cbBillColor" 
                                          ItemsSource="{Binding BillColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Chọn bàn</TextBlock>
                                <ComboBox Name="cbSelectedTableColor" 
                                          ItemsSource="{Binding SelectedTableColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Cạnh bàn</TextBlock>
                                <ComboBox Name="cbTableBorderColor" 
                                          ItemsSource="{Binding TableBorderColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Có người</TextBlock>
                                <ComboBox Name="cbUsingTableColor" 
                                          ItemsSource="{Binding UsingTableColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Tên bàn</TextBlock>
                                <ComboBox Name="cbUsingTableNameColor" 
                                          ItemsSource="{Binding UsingTableNameColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Trống</TextBlock>
                                <ComboBox Name="cbEmptyTableColor" 
                                          ItemsSource="{Binding EmptyTableColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock MinWidth="100" Margin="0 0 5 0">Tên bàn</TextBlock>
                                <ComboBox Name="cbEmptyTableNameColor" 
                                          ItemsSource="{Binding EmptyTableNameColorView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem >
                        <MenuItem.Header>
                            <TextBox x:Name="txbSkinName" FontSize="16" Text="Điền tên mới cho Skin" Background="Transparent" BorderThickness="0 0 0 1"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem >
                        <MenuItem.Header>
                            <Button Style="{StaticResource Button.RectangleStyle}" Height="30" Command="{Binding SaveNewSkin}" CommandParameter="{Binding ElementName=txbSkinName, Path=Text}">Lưu Skin hiện tại</Button>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Chọn Fonts">
                    <MenuItem >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="0 0 5 0">Fonts chữ</TextBlock>
                                <ComboBox Name="cbFontFamilies"
                                          ItemsSource="{Binding FontFamiliesView}" 
                                          IsSynchronizedWithCurrentItem="True" 
                                          Style="{DynamicResource ResourceKey={x:Static ToolBar.ComboBoxStyleKey}}" >
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type FontFamily}">
                                            <TextBlock Text="{Binding FamilyNames[en-us]}" FontFamily="{Binding}" FontSize="16"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Nghe nhạc" Padding="-2 0 0 0" InputGestureText="{Binding ElementName=txblMediaPosition, Path=Text}" Command="{Binding Source={StaticResource TableManagerVM}, Path=PlayMedia}">
                    <MenuItem.Icon>
                        <mctrl:Equalizer Mode="3" Width="22" Status="{Binding Source={StaticResource TableManagerVM}, Path=MediaPlayer.Status}" Margin="-3 0 -5 0"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Về chương trình">
                    <MenuItem >
                        <MenuItem.Header>
                            <Border>
                                <StackPanel>
                                    <TextBox x:Name="txbTitle" Text="Phần mềm quản lý canteen" TextAlignment="Center" FontSize="16" MinWidth="200" Background="Transparent" Foreground="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}" BorderThickness="0 0 0 1" />
                                    <TextBlock Margin="0 20 0 0">Vũ Quang Long</TextBlock>
                                    <TextBlock><Hyperlink RequestNavigate="Hyperlink_RequestNavigate" NavigateUri="https://github.com/vqlong?tab=repositories">https://github.com/vqlong?tab=repositories</Hyperlink></TextBlock>
                                </StackPanel>
                            </Border>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Đăng xuất" Command="{Binding Close}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:TableManagerView}}"/>
            </MenuItem>
        </Menu>
        <Grid DockPanel.Dock="Bottom" Margin="2 0 2 0">
            <!--Ghi rõ source của binding để XSlider không mò trong DataContext của chính nó-->
            <mctrl:XSlider x:Name="sliderMediaStatus" Mode="HorizontalSeekSlider" TrackHeight="2" Height="2"
                           Minimum="{Binding Source={StaticResource TableManagerVM}, Path=MediaPlayer.SeekBar.Minimum, Mode=OneWay}" 
                           Maximum="{Binding Source={StaticResource TableManagerVM}, Path=MediaPlayer.SeekBar.Maximum, Mode=OneWay}" 
                           Value="{Binding Source={StaticResource TableManagerVM}, Path=MediaPlayer.SeekBar.Value, Mode=OneWay}"
                           DecreaseButtonBackground="{StaticResource UncheckedGradient}" IncreaseButtonBackground="Transparent"                         
                           ShowMaxMin="Collapsed" ShowValue="Collapsed"  Margin="-10 0 -10 0"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock x:Name="txblMediaPosition" Text="{Binding MediaPlayer.TextPosition}" FontSize="16" Foreground="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}" />
                <mctrl:Equalizer x:Name="statusEqualizer" Mode="3" Width="40" Status="{Binding MediaPlayer.Status}"  Margin="2 1 8 1"/>
            </StackPanel>
        </Grid>
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <DockPanel  Grid.Column="2" Grid.Row="0" MinWidth="750">
                <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ComboBox Name="cbCategories" Grid.Row="0" Grid.Column="0" MaxDropDownHeight="400" ItemsSource="{Binding UsingCategoriesView}" Style="{StaticResource ComboBox.SelectableColorStyle}" />
                    <TextBlock Grid.Row="0" Grid.Column="1"  FontWeight="Bold" FontSize="26">Số lượng:</TextBlock>
                    <ComboBox Name="cbFoods" Grid.Row="1" Grid.Column="0"  MaxDropDownHeight="400" ItemsSource="{Binding ElementName=cbCategories, Path=SelectedItem.Foods}" SelectedItem="{Binding SelectedFood, Mode=OneWayToSource}" Style="{StaticResource ComboBox.SelectableColorStyle}" >
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Loaded">
                                <b:InvokeCommandAction Command="{Binding SetIndex}" CommandParameter="{Binding ElementName=cbFoods}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                    <mctrl:NumericUpDown x:Name="nmFoodCount" Grid.Row="1" Grid.Column="1" MinValue="-10" MaxValue="10" Width="100" Value="{Binding FoodCount, Mode=TwoWay}"/>
                    <Button Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Style="{StaticResource Button.CircleStyle}" Command="{Binding AddFood}">Thêm món</Button>
                </Grid>
                <Grid DockPanel.Dock="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0" Grid.Column="0" Style="{StaticResource Button.RectangleStyle}" Command="{Binding SwapTable}">Chuyển tới</Button>
                    <TextBlock Grid.Row="0" Grid.Column="1" >Chọn bàn:</TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="2" >Giảm giá:</TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="3" >Thành tiền:</TextBlock>
                    <Button Grid.Row="1" Grid.Column="0" Style="{StaticResource Button.RectangleStyle}" Command="{Binding CombineTable}" >Gộp vào</Button>
                    <ComboBox x:Name="cbTables" Grid.Row="1" Grid.Column="1" HorizontalContentAlignment="Center" ItemsSource="{Binding UsingTablesView2}" IsEditable="True" Style="{StaticResource ComboBox.SelectableColorStyle}" DisplayMemberPath="Name" SelectedValuePath="Name" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=SelectedValue}" ToolTipService.InitialShowDelay="0"/>
                    <mctrl:NumericUpDown x:Name="nmDiscount" Grid.Row="1" Grid.Column="2" MinValue="0" MaxValue="100" Value="{Binding Discount, Mode=TwoWay}"/>
                    <Border Grid.Row="1" Grid.Column="3" Background="{Binding ElementName=cbControlBackground, Path=SelectedItem.Brush}" BorderBrush="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}" BorderThickness="1" CornerRadius="5" Margin="2">
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Margin="5 0 5 0">
                            <TextBlock x:Name="txblTotalPrice" Tag="{Binding TotalPrice, TargetNullValue=o_0}" Text="{Binding RelativeSource={RelativeSource Self}, Path=Tag, ConverterCulture=vi-vn, StringFormat={}{0:C1}}" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" ToolTipService.InitialShowDelay="0" />
                        </ScrollViewer>
                    </Border>
                    <Button Grid.Row="0" Grid.Column="4" Grid.RowSpan="2" Style="{StaticResource Button.CircleStyle}" Command="{Binding PrintBill}" CommandParameter="{x:Type local:PrintBillView}" Content="Thanh toán">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:InvokeCommandAction Command="{Binding Checkout}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                </Grid>
                <GroupBox BorderBrush="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}" BorderThickness="1" Margin="2">
                    <GroupBox.Header>
                        <TextBlock Text="{Binding ElementName=lsvTables, Path=SelectedItem.Name, StringFormat={}Hoá đơn chưa thanh toán [{0}], FallbackValue=Hoá đơn chưa thanh toán}" Foreground="{Binding ElementName=cbBillColor, Path=SelectedItem.Brush}" FontWeight="Bold" FontSize="26"/>
                    </GroupBox.Header>
                    <ListView x:Name="lsvBill" ItemsSource="{Binding BillDetails}" Background="Transparent" BorderThickness="0">
                        <ListView.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{Binding ElementName=cbBillColor, Path=SelectedItem.Brush}"/>
                                <Setter Property="FontFamily" Value="{Binding ElementName=cbFontFamilies, Path=SelectedItem.Source}"/>
                                <Setter Property="FontSize" Value="20"/>
                            </Style>
                            <DataTemplate x:Key="CellTemplate.Price">
                                <Border MinWidth="{Binding Source={x:Reference columnPrice}, Path=ActualWidth}" Margin="-6 -1 -6 -1">
                                    <TextBlock Text="{Binding Price, ConverterCulture=vi-vn, StringFormat={}{0:C1}}" 
                                               Foreground="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}" 
                                               FontFamily="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"
                                               FontSize="20"
                                               HorizontalAlignment="Right" 
                                               Margin="0 0 2 0"/>
                                </Border>
                            </DataTemplate>
                            <DataTemplate x:Key="CellTemplate.TotalPrice">
                                <Border MinWidth="{Binding Source={x:Reference columnTotalPrice}, Path=ActualWidth}" Margin="-6 -1 -6 -1">
                                    <TextBlock Text="{Binding TotalPrice, ConverterCulture=vi-vn, StringFormat={}{0:C1}}" 
                                               Foreground="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}" 
                                               FontFamily="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"
                                               FontSize="20"
                                               HorizontalAlignment="Right" 
                                               Margin="0 0 2 0"/>
                                </Border>
                            </DataTemplate>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvBill}" Header="Tên món" DisplayMemberBinding="{Binding FoodName}"/>
                                <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvBill}" Header="Thể loại" DisplayMemberBinding="{Binding CategoryName}"/>
                                <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvBill}" Header="Số lượng" DisplayMemberBinding="{Binding FoodCount}"/>
                                <GridViewColumn mlib:AttachedManager.String="Price" mlib:AttachedManager.Tag="{x:Reference lsvBill}" x:Name="columnPrice" Header="Đơn giá" CellTemplate="{StaticResource CellTemplate.Price}"/>
                                <GridViewColumn mlib:AttachedManager.String="TotalPrice" mlib:AttachedManager.Tag="{x:Reference lsvBill}" x:Name="columnTotalPrice" Header="Tổng tiền" CellTemplate="{StaticResource CellTemplate.TotalPrice}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </GroupBox>
            </DockPanel>
            <GridSplitter Grid.Column="1" Grid.Row="0" Width="2"  VerticalAlignment="Stretch" HorizontalAlignment="Center"/>
            <Border Grid.Column="0" Grid.Row="0" BorderBrush="{Binding ElementName=cbBorderColor, Path=SelectedItem.Brush}" BorderThickness="1" CornerRadius="5" Margin="2" Padding="2">
                <ListView x:Name="lsvTables" ItemsSource="{Binding UsingTablesView}" SelectedItem="{Binding SelectedTable}" Background="Transparent" BorderThickness="0" SelectionMode="Single">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="5"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="model:Table">
                            <ToggleButton x:Name="toggle" 
                                          IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=IsSelected}" >
                                <StackPanel x:Name="stack">
                                    <TextBlock x:Name="txbName" Text="{Binding Name}" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                    <TextBlock x:Name="txbStatus" Text="{Binding Status}" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <ToggleButton.ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Source={x:Reference txbName}, Path=Text}" HorizontalAlignment="Center"/>
                                        <TextBlock Text="{Binding Source={x:Reference txbStatus}, Path=Text}" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="Trống">
                                    <Setter TargetName="toggle" Property="ToggleButton.Background" Value="{Binding Source={StaticResource SkinVM}, Path=EmptyTableColorView.CurrentItem.Brush}"/>
                                    <Setter TargetName="stack" Property="TextBlock.Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=EmptyTableNameColorView.CurrentItem.Brush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="Có người">
                                    <Setter TargetName="toggle" Property="ToggleButton.Background" Value="{Binding Source={StaticResource SkinVM}, Path=UsingTableColorView.CurrentItem.Brush}"/>
                                    <Setter TargetName="stack" Property="TextBlock.Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=UsingTableNameColorView.CurrentItem.Brush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=toggle, Path=IsChecked}" Value="True">
                                    <Setter TargetName="toggle" Property="ToggleButton.Background" Value="{Binding Source={StaticResource SkinVM}, Path=SelectedTableColorView.CurrentItem.Brush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=toggle, Path=IsMouseOver}" Value="True">
                                    <Setter TargetName="toggle" Property="Background" Value="#ccf9ff"/>
                                    <Setter TargetName="toggle" Property="BorderBrush" Value="#00acdf"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=toggle, Path=IsPressed}" Value="True">
                                    <Setter TargetName="toggle" Property="Background" Value="#7ce8ff"/>
                                    <Setter TargetName="toggle" Property="BorderBrush" Value="#0080bf"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Border>
        </Grid>
    </DockPanel>
</Window>

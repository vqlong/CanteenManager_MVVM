<Window x:Class="View.AdminView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:View"
        mc:Ignorable="d"
        Title="Admin" MinHeight="450" MinWidth="600"
        ResizeMode="CanResize"
        WindowStartupLocation="CenterScreen"
        Style="{StaticResource Window.CustomStyle}"
        xmlns:model="clr-namespace:Model;assembly=Model"
        xmlns:mctrl="clr-namespace:WpfLibrary.UserControls;assembly=WpfLibrary"
        xmlns:mlib="clr-namespace:WpfLibrary;assembly=WpfLibrary"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime" 
        xmlns:wfrpv="clr-namespace:Microsoft.Reporting.WinForms;assembly=Microsoft.ReportViewer.WinForms"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors">
    <x:Code>
        <![CDATA[
            public AdminView()
            {
                InitializeComponent();
            }
        
            private void TabControl_SelectionChanged(object sender, SelectionChangedEventArgs e)
            {
                if (e.Source is TabControl tabControl)
                {
                    if (tabControl.Items.Count <= 0) return; 
                    if (e.AddedItems.Count > 0 && e.AddedItems[0] is TabItem selectedTab && selectedTab.Equals(tabControl.Items[0])) selectedTab.Margin = new Thickness(2, 0, -2, -15);
                    if (e.RemovedItems.Count > 0 && e.RemovedItems[0] is TabItem unselectedTab && unselectedTab.Equals(tabControl.Items[0])) unselectedTab.Margin = new Thickness(10, 0, 0, 0);
                }
            }
        ]]>
    </x:Code>
    <Window.Resources>
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="{Binding Source={StaticResource SkinVM}, Path=UsingTableColorView.CurrentItem.Brush}"/>
            <Setter Property="TextBlock.Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=UsingTableNameColorView.CurrentItem.Brush}"/>
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=BorderBrush}"/>
            <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="MinHeight" Value="80"/>
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2 2 0 2" CornerRadius="15 0 0 15" >
                            <ContentPresenter ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{Binding Source={StaticResource SkinVM}, Path=ControlBackgroundView.CurrentItem.Brush}"/>
                                <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=TextColorView.CurrentItem.Brush}"/>
                                <Setter Property="Panel.ZIndex" Value="99"/>
                                <Setter Property="Margin" Value="2 -15 -2 -15"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}"/>
            <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=BorderBrush}"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
        </Style>

        <Style x:Key="ComboBox.SingleLineStyle" TargetType="ComboBox" BasedOn="{StaticResource ComboBox.SelectableColorStyle}">
            <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}"/>
            <Setter Property="BorderThickness" Value=" 0 0 0 1"/>
            <Setter Property="mlib:AttachedManager.CornerRadius" Value="0"/>
            <Setter Property="Margin" Value="0"/>
        </Style>

        <Style TargetType="mctrl:NumericUpDown">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}"/>
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=BorderBrush}"/>
            <Setter Property="BorderThickness" Value=" 0 0 0 1"/>
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="mlib:AttachedManager.CornerRadius" Value="4.5"/>
            <Setter Property="NumberAlignment" Value="Left"/>
        </Style>

        <Style TargetType="DatePicker">
            <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=TextColorView.CurrentItem.Brush}"/>
            <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="DatePickerTextBox">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <ObjectDataProvider x:Key="UsingStateEnum"
                            MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="model:UsingState"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <DataTemplate DataType="{x:Type model:UsingState}">
            <TextBlock Text="{Binding}" />
        </DataTemplate>
        
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=TextColorView.CurrentItem.Brush}"/>
                <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="Margin" Value="0 15 0 0"/>
            </Style>
        </Grid.Resources>
        <TabControl x:Name="tcAdmin" TabStripPlacement="Left" SelectionChanged="TabControl_SelectionChanged" Margin="0 0 0 0">
            <TabItem Header="Doanh thu" DataContext="{StaticResource BillVM}">
                <DockPanel Margin="20">
                    <UniformGrid DockPanel.Dock="Top" Columns="3">
                        <Border BorderBrush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=BorderBrush}" BorderThickness="1" CornerRadius="5" Margin="0 2 5 2">
                            <DatePicker x:Name="dpkFromDate" SelectedDate="{Binding FromDate}"/>
                        </Border>
                        <Button Style="{StaticResource Button.RectangleStyle}" Content="In hoá đơn" Command="{Binding PrintBill}" CommandParameter="{x:Type local:PrintBillView}"/>
                        <Border BorderBrush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=BorderBrush}" BorderThickness="1" CornerRadius="5" Margin="5 2 0 2">
                            <DatePicker x:Name="dpkToDate" SelectedDate="{Binding ToDate}"/>
                        </Border>
                    </UniformGrid>
                    <Grid DockPanel.Dock="Bottom">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <Button Command="{x:Static mctrl:NumericUpDown.ValueMin}">&lt;&lt;</Button>
                            <Button Command="{x:Static mctrl:NumericUpDown.ValueDown}">&lt;</Button>
                            <mctrl:NumericUpDown x:Name="nmPageNumber" MaxValue="{Binding MaxPage, Mode=TwoWay}" Value="{Binding PageNumber, Mode=TwoWay}"/>
                            <TextBlock x:Name="txblMaxPage" IsEnabled="{Binding ElementName=ckbDisplayByPage, Path=IsChecked}" Visibility="{Binding ElementName=ckbDisplayByPage, Path=IsChecked, Converter={StaticResource BoolToVisibility}}">                              
                                <Run>/</Run><Run x:Name="runMaxPage" Text="{Binding MaxPage, FallbackValue=0}"/>
                            </TextBlock>
                            <Button Command="{x:Static mctrl:NumericUpDown.ValueUp}">&gt;</Button>
                            <Button Command="{x:Static mctrl:NumericUpDown.ValueMax}">&gt;&gt;</Button>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                            <TextBlock xml:space="preserve" VerticalAlignment="Center" Margin="0">Số dòng mỗi trang: </TextBlock>
                            <mctrl:NumericUpDown x:Name="nmPageSize" MaxValue="30" Value="{Binding PageSize, Mode=TwoWay}" />
                            <CheckBox x:Name="ckbDisplayByPage" 
                                      Content="Hiện theo trang" 
                                      IsChecked="{Binding IsDateAndPage}"
                                      Foreground="{Binding Source={StaticResource SkinVM}, Path=TextColorView.CurrentItem.Brush}" 
                                      BorderBrush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=BorderBrush}"
                                      FontFamily="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"
                                      FontSize="20"
                                      MaxHeight="25"
                                      Margin="5 0 0 0"/>
                        </StackPanel>
                        <Grid.Resources>
                            <Style TargetType="mctrl:NumericUpDown">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}"/>
                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=BorderBrush}"/>
                                <Setter Property="CornerRadius" Value="5"/>
                                <Setter Property="mlib:AttachedManager.CornerRadius" Value="4.5"/>
                                <Setter Property="Width" Value="90"/>
                                <Setter Property="MinValue" Value="1"/>
                                <Setter Property="IsEnabled" Value="{Binding ElementName=ckbDisplayByPage, Path=IsChecked}"/>
                            </Style>
                            <Style TargetType="Button" BasedOn="{StaticResource Button.RectangleStyle}">
                                <Setter Property="Width" Value="90"/>
                                <Setter Property="IsEnabled" Value="{Binding ElementName=ckbDisplayByPage, Path=IsChecked}"/>
                                <Setter Property="CommandTarget" Value="{Binding ElementName=nmPageNumber}"/>
                            </Style>
                        </Grid.Resources>
                    </Grid>
                    <TextBlock DockPanel.Dock="Bottom" xml:space="preserve" HorizontalAlignment="Right" Margin="0 10 0 40">Tổng tiền: <Run Text="{Binding BillsTotalPrice, ConverterCulture=vi-vn, StringFormat={}{0:C1}}"/></TextBlock>
                    <ListView x:Name="lsvBills" ItemsSource="{Binding Bills}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding SelectedItem, Mode=OneWayToSource}">
                        <ListView.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}"/>
                                <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
                                <Setter Property="FontSize" Value="20"/>
                            </Style>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvBills}" Header="Id" DisplayMemberBinding="{Binding Id}"/>
                                <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvBills}" Header="Ngày phát sinh" DisplayMemberBinding="{Binding DateCheckIn}"/>
                                <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvBills}" Header="Ngày thanh toán" DisplayMemberBinding="{Binding DateCheckOut}"/>
                                <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvBills}" Header="Tên bàn" DisplayMemberBinding="{Binding Table.Name}"/>
                                <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvBills}" Header="Giảm giá (%)" DisplayMemberBinding="{Binding Discount}"/>
                                <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvBills}" Header="Tiền thanh toán (Vnđ)" DisplayMemberBinding="{Binding TotalPrice, ConverterCulture=vi-vn, StringFormat={}{0:C1}}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </TabItem>
            
            <TabItem Header="Thức ăn" DataContext="{StaticResource FoodVM}">
                <DockPanel Margin="20" >
                    <StackPanel DockPanel.Dock="Right" Width="400" Margin="20 0 0 0">

                        <TextBox x:Name="txbSearchFood">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="TextChanged">
                                    <b:InvokeCommandAction Command="{Binding RefreshView}" CommandParameter="{Binding ElementName=txbSearchFood, Path=Text}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </TextBox>

                        <TextBlock >Id:</TextBlock>
                        <TextBlock Text="{Binding SelectedItem.Id}" Foreground="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}" Margin="0"/>

                        <TextBlock >Tên món:</TextBlock>
                        <TextBox x:Name="txbFoodName" Text="{Binding SelectedItem.Name, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock >Danh mục:</TextBlock>
                        <ComboBox x:Name="cbFoodCategories" ItemsSource="{Binding FoodCategoriesView}" IsEditable="True" IsReadOnly="True" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding SelectedItem.CategoryId}" Style="{StaticResource ComboBox.SingleLineStyle}" />

                        <TextBlock >Giá:</TextBlock>
                        <mctrl:NumericUpDown x:Name="nmPrice" Value="{Binding SelectedItem.Price, Mode=TwoWay}" />

                        <TextBlock >Trạng thái:</TextBlock>
                        <ComboBox x:Name="cbFoodStatus" ItemsSource="{Binding FoodStatusView}" Height="30" MaxDropDownHeight="80" SelectedItem="{Binding SelectedItem.FoodStatus}" Style="{StaticResource ComboBox.SingleLineStyle}"/>

                        <UniformGrid Columns="3" Rows="1" Height="30" Margin="0 15 0 0">
                            <Button Content="Cập nhật" Style="{StaticResource Button.RectangleStyle}" IsDefault="True"  Margin="0 0 5 0" Command="{Binding Update}"/>
                            <Button Content="Thêm" Style="{StaticResource Button.RectangleStyle}" Margin="5 0 5 0" Command="{Binding Insert}"/>
                            <Button Content="Xoá" Style="{StaticResource Button.RectangleStyle}" Margin="5 0 0 0" Command="{Binding Delete}"/>
                        </UniformGrid>
                    </StackPanel>
                    
                    <Grid>
                        <ListView x:Name="lsvFoods" ItemsSource="{Binding FoodsView}" SelectedItem="{Binding SelectedItem, Mode=OneWayToSource}" IsSynchronizedWithCurrentItem="True">
                            <ListView.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}"/>
                                    <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
                                    <Setter Property="FontSize" Value="20"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="Dừng bán">
                                            <Setter Property="Foreground" Value="{StaticResource DangerSolid}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.Resources>
                            <ListView.View>
                                <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvFoods}" Header="Id" DisplayMemberBinding="{Binding Id}"/>
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvFoods}" Header="Tên món" DisplayMemberBinding="{Binding Name}"/>
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvFoods}" Header="Danh mục" DisplayMemberBinding="{Binding Category.Name}"/>
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvFoods}" Header="Giá" DisplayMemberBinding="{Binding Price, ConverterCulture=vi-vn, StringFormat={}{0:C1}}"/>
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvFoods}" Header="Trạng thái" DisplayMemberBinding="{Binding FoodStatus}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </DockPanel>
            </TabItem>
            
            <TabItem Header="Danh mục" DataContext="{StaticResource CategoryVM}">
                <DockPanel Margin="20" >
                    <StackPanel DockPanel.Dock="Right" Width="400" Margin="20 0 0 0">

                        <TextBox x:Name="txbSearchCategory">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="TextChanged">
                                    <b:InvokeCommandAction Command="{Binding RefreshView}" CommandParameter="{Binding ElementName=txbSearchCategory, Path=Text}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </TextBox>

                        <TextBlock >Id:</TextBlock>
                        <TextBlock Text="{Binding SelectedItem.Id}" Foreground="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}" Margin="0"/>

                        <TextBlock >Tên mục:</TextBlock>
                        <TextBox x:Name="txbCategoryName" Text="{Binding SelectedItem.Name, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock >Trạng thái:</TextBlock>
                        <ComboBox x:Name="cbCategoryStatus" ItemsSource="{Binding CategoryStatusView}" Height="30" MaxDropDownHeight="80" SelectedItem="{Binding SelectedItem.CategoryStatus}" Style="{StaticResource ComboBox.SingleLineStyle}" />

                        <UniformGrid Columns="3" Rows="1" Height="30" Margin="0 15 0 0">
                            <Button Content="Cập nhật" Style="{StaticResource Button.RectangleStyle}" IsDefault="True"  Margin="0 0 5 0" Command="{Binding Update}"/>
                            <Button Content="Thêm" Style="{StaticResource Button.RectangleStyle}" Margin="5 0 5 0" Command="{Binding Insert}"/>
                            <Button Content="Xoá" Style="{StaticResource Button.RectangleStyle}" Margin="5 0 0 0" Command="{Binding Delete}"/>
                        </UniformGrid>
                    </StackPanel>

                    <Grid>
                        <ListView x:Name="lsvCategories" ItemsSource="{Binding CategoriesView}" SelectedItem="{Binding SelectedItem, Mode=OneWayToSource}" IsSynchronizedWithCurrentItem="True">
                            <ListView.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}"/>
                                    <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
                                    <Setter Property="FontSize" Value="20"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="Dừng bán">
                                            <Setter Property="Foreground" Value="{StaticResource DangerSolid}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.Resources>
                            <ListView.View>
                                <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvCategories}" Header="Id" DisplayMemberBinding="{Binding Id}"/>
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvCategories}" Header="Tên danh mục" DisplayMemberBinding="{Binding Name}"/>
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvCategories}" Header="Trạng thái" DisplayMemberBinding="{Binding CategoryStatus}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </DockPanel>
            </TabItem>
            
            <TabItem Header="Bàn ăn" DataContext="{StaticResource TableVM}">
                <DockPanel Margin="20" >
                    <StackPanel DockPanel.Dock="Right" Width="400" Margin="20 0 0 0">

                        <TextBlock >Id:</TextBlock>
                        <TextBlock Text="{Binding SelectedItem.Id}" Foreground="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}" Margin="0"/>

                        <TextBlock >Tên bàn:</TextBlock>
                        <TextBox x:Name="txbTableName" Text="{Binding SelectedItem.Name, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock >Tình trạng:</TextBlock>
                        <TextBlock Text="{Binding SelectedItem.Status}" Foreground="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}" Margin="0"/>

                        <TextBlock >Trạng thái:</TextBlock>
                        <ComboBox x:Name="cbTableStatus" ItemsSource="{Binding TableStatusView}" Height="30" MaxDropDownHeight="80" SelectedItem="{Binding SelectedItem.UsingState}" Style="{StaticResource ComboBox.SingleLineStyle}" />

                        <UniformGrid Columns="3" Rows="1" Height="30" Margin="0 15 0 0">
                            <Button Content="Cập nhật" Style="{StaticResource Button.RectangleStyle}" IsDefault="True"  Margin="0 0 5 0" Command="{Binding Update}"/>
                            <Button Content="Thêm" Style="{StaticResource Button.RectangleStyle}" Margin="5 0 5 0" Command="{Binding Insert}"/>
                            <Button Content="Xoá" Style="{StaticResource Button.RectangleStyle}" Margin="5 0 0 0" Command="{Binding Delete}"/>
                        </UniformGrid>
                    </StackPanel>

                    <Grid>
                        <ListView x:Name="lsvTables" ItemsSource="{Binding TablesView}" SelectedItem="{Binding SelectedItem, Mode=OneWayToSource}" IsSynchronizedWithCurrentItem="True">
                            <ListView.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}"/>
                                    <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
                                    <Setter Property="FontSize" Value="20"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="Dừng bán">
                                            <Setter Property="Foreground" Value="{StaticResource DangerSolid}"/>
                                        </Trigger>
                                        <Trigger Property="Text" Value="Có người">
                                            <Setter Property="Foreground" Value="{StaticResource SuccessSolid}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.Resources>
                            <ListView.View>
                                <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvTables}" Header="Id" DisplayMemberBinding="{Binding Id}"/>
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvTables}" Header="Tên bàn" DisplayMemberBinding="{Binding Name}"/>
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvTables}" Header="Tình trạng" DisplayMemberBinding="{Binding Status}"/>
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvTables}" Header="Trạng thái" DisplayMemberBinding="{Binding UsingState}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </DockPanel>
            </TabItem>
            
            <TabItem Header="Tài khoản" DataContext="{StaticResource AccountVM}">
                <DockPanel Margin="20" >
                    <StackPanel DockPanel.Dock="Right" Width="400" Margin="20 0 0 0">

                        <TextBlock >Tên đăng nhập:</TextBlock>
                        <TextBlock Text="{Binding SelectedItem.Username}" Foreground="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}" Margin="0"/>

                        <TextBlock >Tên hiển thị:</TextBlock>
                        <TextBox x:Name="txbDisplayName" Text="{Binding SelectedItem.DisplayName, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock >Loại tài khoản:</TextBlock>
                        <TextBlock Text="{Binding SelectedItem.Type}" Foreground="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}" Margin="0"/>

                        <UniformGrid Columns="3" Rows="1" Height="30" Margin="0 15 0 0">
                            <Button Content="Cập nhật" Style="{StaticResource Button.RectangleStyle}" IsDefault="True"  Margin="0 0 5 0" Command="{Binding Update}"/>
                            <Button Content="Thêm" Style="{StaticResource Button.RectangleStyle}" Margin="5 0 5 0" Command="{Binding OpenWindow}" CommandParameter="{x:Type local:InsertAccountView}"/>
                            <Button Content="Xoá" Style="{StaticResource Button.RectangleStyle}" Margin="5 0 0 0" Command="{Binding Delete}"/>
                        </UniformGrid>
                        <Button Content="Đặt lại mật khẩu" Height="30" Style="{StaticResource Button.RectangleStyle}" Margin="0 15 0 0" Command="{Binding ResetPassword}"/>
                    </StackPanel>

                    <Grid>
                        <ListView x:Name="lsvAccounts" ItemsSource="{Binding AccountsView}" SelectedItem="{Binding SelectedItem, Mode=OneWayToSource}" IsSynchronizedWithCurrentItem="True">
                            <ListView.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=BillColorView.CurrentItem.Brush}"/>
                                    <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
                                    <Setter Property="FontSize" Value="20"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="Quản lý">
                                            <Setter Property="Foreground" Value="{StaticResource WarningSolid}"/>
                                        </Trigger>
                                        <Trigger Property="Text" Value="admin">
                                            <Setter Property="Foreground" Value="{StaticResource DangerSolid}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.Resources>
                            <ListView.View>
                                <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvAccounts}" Header="Tên đăng nhập" DisplayMemberBinding="{Binding Username}"/>
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvAccounts}" Header="Tên hiển thị" DisplayMemberBinding="{Binding DisplayName}"/>
                                    <GridViewColumn mlib:AttachedManager.String="{Binding RelativeSource={RelativeSource Self}, Path=DisplayMemberBinding.Path.Path}" mlib:AttachedManager.Tag="{x:Reference lsvAccounts}" Header="Loại tài khoản" DisplayMemberBinding="{Binding Type}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </DockPanel>
            </TabItem>

            <TabItem x:Name="tabReport" DataContext="{StaticResource ReportVM}" >
                <TabItem.Header>
                    <Button Content="Thống kê"  
                            BorderThickness="0"
                            Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}, Path=Foreground}"
                            Height="80"
                            Width="200">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" CornerRadius="14.5 0 0 14.5">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#ccf9ff"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:InvokeCommandAction Command="{Binding OpenWindow}" CommandParameter="{x:Type local:ReportView}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                </TabItem.Header>
            </TabItem>
            
            <TabControl.Template>
                <ControlTemplate TargetType="TabControl">
                    <Border >
                        <DockPanel ClipToBounds="True">
                            <TabPanel DockPanel.Dock="{TemplateBinding TabStripPlacement}" IsItemsHost="True"  Panel.ZIndex="99"/>
                            <Border Background="{Binding Source={StaticResource SkinVM}, Path=ControlBackgroundView.CurrentItem.Brush}" BorderBrush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=BorderBrush}" BorderThickness="2" CornerRadius="0 15 12.5 0" Panel.ZIndex="1">
                                <ContentPresenter ContentSource="SelectedContent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                            </Border>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </TabControl.Template>
        </TabControl>
    </Grid>
</Window>

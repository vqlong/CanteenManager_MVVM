<Application x:Class="View.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:View"
             StartupUri="LoginView.xaml"
             DispatcherUnhandledException="Application_DispatcherUnhandledException"
             Startup="Application_Startup"
             xmlns:mlib="clr-namespace:WpfLibrary;assembly=WpfLibrary" >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/WpfLibrary;component/Resources/LoginWindowStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/WpfLibrary;component/Resources/WindowStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/WpfLibrary;component/Resources/Fonts.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/WpfLibrary;component/Resources/Converters.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/WpfLibrary;component/Resources/ErrorTemplates.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/WpfLibrary;component/Resources/ComboBoxStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/WpfLibrary;component/Resources/Brushes.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/WpfLibrary;component/Resources/CheckBoxStyle.xaml"/>
                <ResourceDictionary Source="ViewModel.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="Button.CustomStyle" TargetType="Button">
                <Setter Property="Background" Value="{Binding Source={StaticResource SkinVM}, Path=UsingTableColorView.CurrentItem.Brush}"/>
                <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=UsingTableNameColorView.CurrentItem.Brush}"/>
                <Setter Property="BorderBrush" Value="{Binding Source={StaticResource SkinVM}, Path=TableBorderColorView.CurrentItem.Brush}"/>
                <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(mlib:AttachedManager.CornerRadius)}"
                                    Width="{TemplateBinding ActualWidth}" 
                                    Height="{TemplateBinding ActualHeight}"
                                    ToolTipService.InitialShowDelay="0">
                                <TextBlock Text="{TemplateBinding Content}" TextAlignment="Center" TextWrapping="Wrap" TextBlock.Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#ccf9ff"/>
                                    <Setter Property="BorderBrush" Value="#00acdf"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#7ce8ff"/>
                                    <Setter Property="BorderBrush" Value="#0080bf"/>
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" Value="#7873f5"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="#FFF4F4F4"/>
                                    <Setter Property="BorderBrush" Value="#FFADB2B5"/>
                                    <Setter Property="TextElement.Foreground" Value="#FF838383"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Button.CircleStyle" TargetType="Button" BasedOn="{StaticResource Button.CustomStyle}">
                <Setter Property="Width" Value="80"/>
                <Setter Property="Height" Value="80"/>
                <Setter Property="mlib:AttachedManager.CornerRadius" Value="40"/>
                <Setter Property="Margin" Value="5"/>
            </Style>

            <Style x:Key="Button.RectangleStyle" TargetType="Button" BasedOn="{StaticResource Button.CustomStyle}">
                <Setter Property="mlib:AttachedManager.CornerRadius" Value="5"/>
                <Setter Property="Margin" Value="2"/>
            </Style>

            <Style x:Key="ComboBox.SelectableColorStyle" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="Background" Value="{Binding Source={StaticResource SkinVM}, Path=ControlBackgroundView.CurrentItem.Brush}"/>
                <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=TextColorView.CurrentItem.Brush}"/>
                <Setter Property="BorderBrush" Value="{Binding Source={StaticResource SkinVM}, Path=BorderColorView.CurrentItem.Brush}"/>
                <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
            </Style>

            <LinearGradientBrush x:Key="GridViewColumnHeaderBorderBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFF2F2F2" Offset="0"/>
                <GradientStop Color="#FFD5D5D5" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="GridViewColumnHeaderBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                <GradientStop Color="#FFFFFFFF" Offset="0.4091"/>
                <GradientStop Color="#FFF7F8F9" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFE3F7FF" Offset="0"/>
                <GradientStop Color="#FFB7E7FB" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFBCE4F9" Offset="0"/>
                <GradientStop Color="#FF8AD1F5" Offset="1"/>
            </LinearGradientBrush>
            <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
                <Setter Property="Canvas.Right" Value="-9"/>
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="10"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="FontFamily" Value="{Binding Source={StaticResource SkinVM}, Path=FontFamiliesView.CurrentItem.Source}"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{Binding Source={StaticResource SkinVM}, Path=TextColorView.CurrentItem.Brush}"/>
                <Setter Property="BorderThickness" Value="0 0 0 3"/>
                <Setter Property="Padding" Value="2,0,2,0"/>
                <Setter Property="Foreground" Value="{Binding Source={StaticResource SkinVM}, Path=BorderColorView.CurrentItem.Brush}"/>
                <Setter Property="Command" Value="{Binding Source={StaticResource TableManagerVM}, Path=Sort}"/>
                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border x:Name="HeaderBorder" Background="{TemplateBinding Background}" CornerRadius="3" Margin="3" >
                                        <!--<b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseDown">
                                            <b:InvokeCommandAction Command="{Binding Source={StaticResource TableManagerVM}, Path=Sort}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>-->
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition MaxHeight="10"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="UpperHighlight" Background="#FFE3F7FF" CornerRadius="3 3 0 0" Visibility="Collapsed"/>
                                            <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                                                <ContentPresenter x:Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                        </Grid>
                                    </Border>
                                    <Border x:Name="HeaderHoverBorder"  BorderThickness="1" CornerRadius="3" Margin="1"/>
                                    <Border x:Name="HeaderPressBorder"  BorderThickness="1" CornerRadius="3" Margin="1"/>
                                    <Canvas>
                                        <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
                                    </Canvas>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderHoverBackground}"/>
                                    <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF88CBEB"/>
                                    <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                    <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderPressBackground}"/>
                                    <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF95DAF9"/>
                                    <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="#FF7A9EB1"/>
                                    <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                    <Setter Property="Background" TargetName="UpperHighlight" Value="#FFBCE4F9"/>
                                    <Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
                                    <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
                                </Trigger>
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="20"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Role" Value="Floating">
                        <Setter Property="Opacity" Value="0.4082"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                    <Canvas x:Name="PART_FloatingHeaderCanvas">
                                        <Rectangle Fill="#FF000000" Height="{TemplateBinding ActualHeight}" Opacity="0.4697" Width="{TemplateBinding ActualWidth}"/>
                                    </Canvas>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="Padding">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                    <Border x:Name="HeaderBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Height" Value="Auto">
                                            <Setter Property="MinHeight" Value="20"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
